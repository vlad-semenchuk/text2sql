services:
  postgres:
    image: postgres:16-alpine
    container_name: text2sql-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER is required}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}
      POSTGRES_DB: ${POSTGRES_DB:-dvdrental}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
      - ./db-init/dvdrental.tar:/tmp/dvdrental.tar
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:?POSTGRES_USER is required}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - text2sql-network

  chromadb:
    build:
      context: .
      dockerfile: Dockerfile.chromadb
    container_name: text2sql-chromadb
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v2/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - text2sql-network

  app:
    image: text2sql-app
    container_name: text2sql-app
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:?POSTGRES_USER is required}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?POSTGRES_PASSWORD is required}
      - POSTGRES_DB=${POSTGRES_DB:-dvdrental}
      - POSTGRES_SCHEMA=public
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - CHROMA_SSL=false
      - CHROMA_COLLECTION_NAME=${CHROMA_COLLECTION_NAME:-text2sql-docs}
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL:-claude-3-5-sonnet-latest}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL}
      - BOT_TOKEN=${BOT_TOKEN}
      - BOT_ENABLED=${BOT_ENABLED:-false}
    volumes:
      - cache_data:/app/.cache
    depends_on:
      postgres:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    networks:
      - text2sql-network

volumes:
  postgres_data:
    driver: local
  chroma_data:
    driver: local
  cache_data:
    driver: local

networks:
  text2sql-network:
    driver: bridge
